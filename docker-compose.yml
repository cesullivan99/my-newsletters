version: '3.8'

services:
  # Main application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: my-newsletters-app
    ports:
      - "${APP_PORT:-5001}:5001"
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
      - postgres
    volumes:
      - ./logs:/app/logs
      - audio_cache:/app/audio_cache
    networks:
      - app-network
    restart: unless-stopped

  # Redis for caching and job queue
  redis:
    image: redis:7-alpine
    container_name: my-newsletters-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # PostgreSQL for local development (optional - use Supabase in production)
  postgres:
    image: postgres:15-alpine
    container_name: my-newsletters-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD:-password}
      - POSTGRES_DB=my_newsletters
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    networks:
      - app-network
    restart: unless-stopped

  # Background worker for audio processing
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: my-newsletters-worker
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
      - postgres
    volumes:
      - ./logs:/app/logs
      - audio_cache:/app/audio_cache
    networks:
      - app-network
    restart: unless-stopped
    command: python -m backend.jobs.audio_processing

  # Nginx reverse proxy (production)
  nginx:
    image: nginx:alpine
    container_name: my-newsletters-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - static_files:/usr/share/nginx/html/static
    depends_on:
      - app
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  audio_cache:
  static_files:

networks:
  app-network:
    driver: bridge